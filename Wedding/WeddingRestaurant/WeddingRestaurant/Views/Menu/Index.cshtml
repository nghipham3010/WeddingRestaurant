@model PaginatedList<WeddingRestaurant.Models.MonAn>

@{
    ViewData["Title"] = "Thực Đơn Nhà Hàng";
    var currentFilter = ViewData["CurrentFilter"]?.ToString();
}

@inject IHttpContextAccessor HttpContextAccessor
@using Newtonsoft.Json
@{
    var cartJson = HttpContextAccessor.HttpContext?.Session.GetString("Cart");
    var cartItems = !string.IsNullOrEmpty(cartJson)
        ? JsonConvert.DeserializeObject<List<CartItem>>(cartJson)
        : new List<CartItem>();

    var tongSoLuong = cartItems.Sum(c => c.SoLuong);
    var tongTien = cartItems.Sum(c => c.SoLuong * c.GiaTien);
}
<style>
    body {
        background: linear-gradient(to right, #f9f6f2, #f0f7ff);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    h1 {
        font-weight: bold;
        color: #34495e;
    }

    .card {
        border-radius: 10px;
        transition: transform 0.2s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

    .card-img-top {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }

    .btn {
        border-radius: 6px;
    }

    .pagination .page-link {
        border-radius: 8px;
        margin: 0 2px;
    }

    .input-group .form-control {
        border-radius: 6px 0 0 6px;
    }

    .input-group .btn {
        border-radius: 0 6px 6px 0;
    }

    .badge {
        font-size: 0.8rem;
        padding: 5px 8px;
    }
</style>

<div class="d-flex justify-content-end mb-4">
    <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-dark position-relative">
        <i class="bi bi-cart-fill"></i> Giỏ hàng
        <span id="cart-count" class="badge bg-danger position-absolute top-0 start-100 translate-middle">
            @tongSoLuong
        </span>
    </a>
</div>


<div class="container py-4">
    <h1 class="text-center mb-4">Thực Đơn Phong Phú</h1>

    <div class="row mb-4">
        <div class="col-md-6 offset-md-3">
            <form asp-controller="Menu" asp-action="Index" method="get">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchString" placeholder="Tìm kiếm món ăn..." value="@currentFilter" />
                    <button class="btn btn-outline-primary" type="submit">Tìm kiếm</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">Xóa tìm kiếm</a>
                </div>
            </form>
        </div>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center" role="alert">
            Hiện chưa có món ăn nào trong thực đơn. Vui lòng quay lại sau!
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        @if (!string.IsNullOrEmpty(item.HinhAnhUrl))
                        {
                            <img src="@item.HinhAnhUrl" class="card-img-top" alt="@item.TenMonAn" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <img src="/images/placeholder-dish.png" class="card-img-top" alt="Món ăn mặc định" style="height: 200px; object-fit: cover;">
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-primary">@item.TenMonAn</h5>
                            <p class="card-text text-muted flex-grow-1">
                                @((!string.IsNullOrEmpty(item.MoTa) && item.MoTa.Length > 100) ? item.MoTa.Substring(0, 100) + "..." : item.MoTa ?? "(Không có mô tả)")
                            </p>
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <h4 class="mb-0 text-success">@item.GiaTien.ToString("N0") VNĐ</h4>
                                <div class="btn-group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">Xem</a>
                                    <button class="btn btn-success btn-sm add-to-cart" data-id="@item.Id">
                                        Thêm vào giỏ
                                    </button>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- PHÂN TRANG -->
        <nav class="mt-4 d-flex justify-content-center">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-searchString="@currentFilter">«</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled"><span class="page-link">«</span></li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchString="@currentFilter">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-searchString="@currentFilter">»</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled"><span class="page-link">»</span></li>
                }
            </ul>
        </nav>
        @section Scripts {
            <script>
                document.querySelectorAll(".add-to-cart").forEach(button => {
                    button.addEventListener("click", function () {
                        const productId = this.getAttribute("data-id");
                        fetch(`/Cart/AddToCart/${productId}`, {
                            method: "POST",
                            headers: {
                                "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                document.getElementById("cart-count").innerText = data.totalQuantity;
                            }
                        });
                    });
                });
            </script>
    }

    }
</div>
